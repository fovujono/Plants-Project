{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nexport var CartHelper =\n/*#__PURE__*/\nfunction () {\n  function CartHelper() {\n    _classCallCheck(this, CartHelper);\n  }\n\n  _createClass(CartHelper, null, [{\n    key: \"getCart\",\n    value: function getCart() {\n      if (!this.cartData) {//Pulled from cookies/local storage OR a blank array\n      }\n\n      return this.cartData;\n    }\n  }, {\n    key: \"setCart\",\n    value: function setCart(data) {\n      // This will push the data into the cart array\n      this.cartData = this.cartData.push(data);\n    }\n  }, {\n    key: \"removeFromCartById\",\n    value: function removeFromCartById(id) {\n      // This will find all objs that are not equal to the param id and assign that new array\n      this.cartData = this.cartData.filter(function (event) {\n        return event.id !== id;\n      });\n    }\n  }]);\n\n  return CartHelper;\n}();","map":{"version":3,"sources":["c:\\Users\\smoot\\Desktop\\Plants-Project\\client\\src\\utils\\action.js"],"names":["CartHelper","cartData","data","push","id","filter","event"],"mappings":";;AAAA,OAAO,IAAMA,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,8BACF;AACZ,UAAG,CAAC,KAAKC,QAAT,EAAkB,CACd;AAIH;;AACD,aAAO,KAAKA,QAAZ;AACH;AATiB;AAAA;AAAA,4BAWHC,IAXG,EAWG;AACjB;AACA,WAAKD,QAAL,GAAgB,KAAKA,QAAL,CAAcE,IAAd,CAAmBD,IAAnB,CAAhB;AACH;AAdiB;AAAA;AAAA,uCAiBQE,EAjBR,EAiBW;AACzB;AACA,WAAKH,QAAL,GAAgB,KAAKA,QAAL,CAAcI,MAAd,CAAsB,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACF,EAAN,KAAaA,EAAjB;AAAA,OAA3B,CAAhB;AAEH;AArBiB;;AAAA;AAAA,GAAhB","sourcesContent":["export const CartHelper = class {\r\n    static getCart() {\r\n         if(!this.cartData){\r\n             //Pulled from cookies/local storage OR a blank array\r\n\r\n\r\n             \r\n         }\r\n         return this.cartData;\r\n     }\r\n \r\n     static setCart(data) {\r\n         // This will push the data into the cart array\r\n         this.cartData = this.cartData.push(data);\r\n     }\r\n \r\n \r\n     static removeFromCartById(id){\r\n         // This will find all objs that are not equal to the param id and assign that new array\r\n         this.cartData = this.cartData.filter( event => event.id !== id)\r\n \r\n     }\r\n }\r\n "]},"metadata":{},"sourceType":"module"}