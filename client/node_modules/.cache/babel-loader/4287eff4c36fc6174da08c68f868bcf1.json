{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\src\\\\components\\\\Payment\\\\index.js\";\nimport React from \"react\";\nimport \"./style.css\"; // import API from \"../../utils/API\"\n\nimport \"../../pages/products\";\n\nvar Payment =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Payment, _React$Component);\n\n  function Payment(props) {\n    var _this;\n\n    _classCallCheck(this, Payment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Payment).call(this, props));\n\n    _this.handleIncrement = function () {\n      console.log(_this.state.props);\n\n      if (_this.state.count > _this.state.stock) {\n        return \"out of stocks\";\n      }\n\n      _this.setState({\n        count: _this.state.count + 1\n      });\n    };\n\n    _this.handleDecrement = function () {\n      if (_this.state.count <= 0) {\n        _this.setState(function (prevState) {\n          return {\n            counter: prevState.count - 1\n          };\n        });\n      } else {\n        _this.setState({\n          count: _this.state.count - 1\n        });\n      }\n    };\n\n    _this.onInputChange = function (value) {\n      _this.setState({\n        count: value\n      });\n    };\n\n    _this.addToCart = function () {\n      _this.setState({\n        total: _this.state.count * _this.state.price\n      });\n\n      console.log(\"Input Number is \" + _this.state.count + \" \" + \"price is\" + \" \" + _this.state.price);\n      console.log(\"The Total is \" + _this.state.total);\n      console.log(\"this is the current count \" + _this.state.count);\n    };\n\n    console.log(\"my price is \" + props.price);\n    _this.state = {\n      count: 0,\n      price: props.price,\n      total: 0,\n      stock: props.stock // total: 0\n\n    };\n    return _this;\n  } // componentDidMount = () =>{\n  //    this.setState({count: 0})\n  // }\n\n\n  _createClass(Payment, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"payment-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"decrement\",\n        onClick: this.handleDecrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"-\"), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.count,\n        onChange: function onChange(event) {\n          return _this2.onInputChange(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"increment\",\n        onClick: this.handleIncrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"+\")), React.createElement(\"button\", {\n        className: \"add-to-cart\",\n        onClick: this.addToCart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Add To Cart\"));\n    }\n  }]);\n\n  return Payment;\n}(React.Component);\n\nexport default Payment;","map":{"version":3,"sources":["c:\\Users\\smoot\\Desktop\\Plants-Project\\client\\src\\components\\Payment\\index.js"],"names":["React","Payment","props","handleIncrement","console","log","state","count","stock","setState","handleDecrement","prevState","counter","onInputChange","value","addToCart","total","price","event","target","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAO,sBAAP;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB,UAmBnBC,eAnBmB,GAmBD,YAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWJ,KAAvB;;AACA,UAAI,MAAKI,KAAL,CAAWC,KAAX,GAAmB,MAAKD,KAAL,CAAWE,KAAlC,EAAyC;AACvC,eAAO,eAAP;AACD;;AACD,YAAKC,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACD,KAzBkB;;AAAA,UA2BnBG,eA3BmB,GA2BD,YAAM;AACtB,UAAI,MAAKJ,KAAL,CAAWC,KAAX,IAAoB,CAAxB,EAA2B;AACzB,cAAKE,QAAL,CAAc,UAAAE,SAAS;AAAA,iBAAK;AAAEC,YAAAA,OAAO,EAAED,SAAS,CAACJ,KAAV,GAAkB;AAA7B,WAAL;AAAA,SAAvB;AACD,OAFD,MAEO;AACL,cAAKE,QAAL,CAAc;AAAEF,UAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,SAAd;AACD;AACF,KAjCkB;;AAAA,UAmCnBM,aAnCmB,GAmCH,UAAAC,KAAK,EAAI;AACvB,YAAKL,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAEO;AAAT,OAAd;AACD,KArCkB;;AAAA,UAuCnBC,SAvCmB,GAuCP,YAAM;AAChB,YAAKN,QAAL,CAAc;AAAEO,QAAAA,KAAK,EAAE,MAAKV,KAAL,CAAWC,KAAX,GAAmB,MAAKD,KAAL,CAAWW;AAAvC,OAAd;;AAEAb,MAAAA,OAAO,CAACC,GAAR,CACE,qBACE,MAAKC,KAAL,CAAWC,KADb,GAEE,GAFF,GAGE,UAHF,GAIE,GAJF,GAKE,MAAKD,KAAL,CAAWW,KANf;AAQAb,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkB,MAAKC,KAAL,CAAWU,KAAzC;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+B,MAAKC,KAAL,CAAWC,KAAtD;AACD,KApDkB;;AAGjBH,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBH,KAAK,CAACe,KAAnC;AAEA,UAAKX,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXU,MAAAA,KAAK,EAAEf,KAAK,CAACe,KAFF;AAGXD,MAAAA,KAAK,EAAE,CAHI;AAIXR,MAAAA,KAAK,EAAEN,KAAK,CAACM,KAJF,CAKX;;AALW,KAAb;AALiB;AAYlB,G,CAED;AAEA;AACA;;;;;6BAqCS;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,KAAKE,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAKE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KAFpB;AAGE,QAAA,QAAQ,EAAE,kBAAAW,KAAK;AAAA,iBAAI,MAAI,CAACL,aAAL,CAAmBK,KAAK,CAACC,MAAN,CAAaL,KAAhC,CAAJ;AAAA,SAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAWE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,KAAKX,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,CADF,EAiBE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAE,KAAKY,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAjBF,CADF;AAuBD;;;;EA/EmBf,KAAK,CAACoB,S;;AAkF5B,eAAenB,OAAf","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n// import API from \"../../utils/API\"\nimport \"../../pages/products\";\n\nclass Payment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    console.log(\"my price is \" + props.price);\n\n    this.state = {\n      count: 0,\n      price: props.price,\n      total: 0,\n      stock: props.stock\n      // total: 0\n    };\n  }\n\n  // componentDidMount = () =>{\n\n  //    this.setState({count: 0})\n  // }\n\n  handleIncrement = () => {\n    console.log(this.state.props)\n    if (this.state.count > this.state.stock) {\n      return \"out of stocks\";\n    }\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  handleDecrement = () => {\n    if (this.state.count <= 0) {\n      this.setState(prevState => ({ counter: prevState.count - 1 }));\n    } else {\n      this.setState({ count: this.state.count - 1 });\n    }\n  };\n\n  onInputChange = value => {\n    this.setState({ count: value });\n  };\n\n  addToCart = () => {\n    this.setState({ total: this.state.count * this.state.price });\n\n    console.log(\n      \"Input Number is \" +\n        this.state.count +\n        \" \" +\n        \"price is\" +\n        \" \" +\n        this.state.price\n    );\n    console.log(\"The Total is \" + this.state.total);\n    console.log(\"this is the current count \" + this.state.count);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"payment-container\">\n          <button className=\"decrement\" onClick={this.handleDecrement}>\n            -\n          </button>\n\n          <input\n            type=\"text\"\n            value={this.state.count}\n            onChange={event => this.onInputChange(event.target.value)}\n          />\n\n          <button className=\"increment\" onClick={this.handleIncrement}>\n            +\n          </button>\n        </div>\n\n        <button className=\"add-to-cart\" onClick={this.addToCart}>\n          Add To Cart\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}