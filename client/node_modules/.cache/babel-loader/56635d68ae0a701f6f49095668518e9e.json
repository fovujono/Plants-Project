{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\src\\\\components\\\\PlantCard\\\\index.js\";\nimport React from \"react\";\nimport \"./style.css\";\nimport Payment from \"../Payment\";\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\n\nvar PlantCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PlantCard, _React$Component);\n\n  function PlantCard() {\n    var _this;\n\n    _classCallCheck(this, PlantCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlantCard).call(this));\n\n    _this.toggle = function () {\n      _this.setState({\n        isFlipped: !_this.state.isFlipped\n      });\n    };\n\n    _this.state = {\n      isFlipped: false\n    };\n    return _this;\n  }\n\n  _createClass(PlantCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"plant-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Flippy, {\n        flipOnHover: false // default false\n        ,\n        flipOnClick: false // default false\n        ,\n        flipDirection: \"horizontal\" // horizontal or vertical\n        ,\n        ref: function ref(r) {\n          return _this2.flippyHorizontal = r;\n        } // to use toggle method like this.flippy.toggle()\n        // if you pass isFlipped prop component will be controlled component.\n        // and other props, which will go to div\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(FrontSide, {\n        style: {\n          padding: \"0rem\",\n          boxShadow: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"img-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: this.props.plantName,\n        src: this.props.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \" \"), React.createElement(\"button\", {\n        className: \"toggle-style\",\n        onClick: function onClick() {\n          return _this2.flippyHorizontal.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Learn about \", this.props.plantName)), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \" \", this.props.plantName), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"$\", this.props.price), React.createElement(Payment, {\n        key: this.props._id,\n        id: this.props._id,\n        image: this.props.image,\n        plantName: this.props.plantName,\n        price: this.props.price,\n        stock: this.props.stock,\n        description: this.props.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })))), React.createElement(BackSide, {\n        style: {\n          backgroundColor: \"#175852\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"back-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"toggle-style\",\n        onClick: function onClick() {\n          return _this2.flippyHorizontal.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Back\"), React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.props.description)))));\n    }\n  }]);\n\n  return PlantCard;\n}(React.Component);\n\nexport default PlantCard;","map":{"version":3,"sources":["c:\\Users\\smoot\\Desktop\\Plants-Project\\client\\src\\components\\PlantCard\\index.js"],"names":["React","Payment","Flippy","FrontSide","BackSide","PlantCard","toggle","setState","isFlipped","state","r","flippyHorizontal","padding","boxShadow","props","plantName","image","price","_id","stock","description","backgroundColor","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport Payment from \"../Payment\";\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\n\nclass PlantCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isFlipped: false\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      isFlipped: !this.state.isFlipped\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"plant-container\">\n        <Flippy\n          flipOnHover={false} // default false\n          flipOnClick={false} // default false\n          flipDirection=\"horizontal\" // horizontal or vertical\n          ref={r => (this.flippyHorizontal = r)} // to use toggle method like this.flippy.toggle()\n          // if you pass isFlipped prop component will be controlled component.\n          // and other props, which will go to div\n        >\n          <FrontSide style={{ padding: \"0rem\", boxShadow: \"none\" }}>\n            <div className=\"card\">\n             \n              <div className=\"img-container\">\n              \n                <img alt={this.props.plantName} src={this.props.image} > </img>\n                <button\n                className=\"toggle-style\"\n                onClick={() => this.flippyHorizontal.toggle()}\n              >\n                Learn about {this.props.plantName}\n              </button>\n              </div>\n              <div className=\"content\">\n                <p> {this.props.plantName}</p>\n                <p>${this.props.price}</p>\n\n                <Payment\n                  key={this.props._id}\n                  id={this.props._id}\n                  image={this.props.image}\n                  plantName={this.props.plantName}\n                  price={this.props.price}\n                  stock={this.props.stock}\n                  description={this.props.description}\n                />\n              </div>\n            </div>\n          </FrontSide>\n          <BackSide style={{ backgroundColor: \"#175852\" }}>\n            <div className=\"back-container\">\n              <a\n                className=\"toggle-style\"\n                onClick={() => this.flippyHorizontal.toggle()}\n              >\n                Back\n              </a>\n              <div className=\"description\">{this.props.description}</div>\n            </div>\n          </BackSide>\n        </Flippy>\n      </div>\n    );\n  }\n}\n\nexport default PlantCard;\n"]},"metadata":{},"sourceType":"module"}