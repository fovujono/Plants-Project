{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\src\\\\pages\\\\products.js\";\nimport React from \"react\";\nimport API from \"../utils/API\";\nimport PlantCard from \"../components/PlantCard\";\nimport Payment from \"../components/Payment\";\nimport SearchBar from \"../components/SearchBar\";\n\nvar Products =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Products, _React$Component);\n\n  function Products(props) {\n    var _this;\n\n    _classCallCheck(this, Products);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Products).call(this, props));\n\n    _this.loadPlants = function () {\n      API.getPlants().then(function (res) {\n        return _this.setState({\n          plants: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      plants: []\n    };\n    return _this;\n  }\n\n  _createClass(Products, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadPlants(p);\n    }\n  }, {\n    key: \"handleSearch\",\n    value: function handleSearch(event) {\n      var value = event.target.value;\n      var queriedObjs = this.state.plants.filter(function (event) {\n        return event.plantName.toLowerCase().search(value.toLowerCase()) !== -1;\n      });\n      this.setState({\n        plants: queriedObjs\n      });\n    } //   handleSearch(e){\n    //     const value = e.target.value;\n    //     const queriedObjs = plants.filter(e => e.plantName.toLowerCase().search(value.toLowerCase()) !== -1);\n    //     this.setState({plants: queriedObjs});\n    //     console.log('state plants', this.state.plants)\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        handleSearch: this.handleSearch.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.state.plants.length !== 0 ? this.state.plants.map(function (plants) {\n        return React.createElement(PlantCard, {\n          key: plants._id,\n          image: plants.image,\n          plantName: plants.plantName,\n          price: plants.price // stock={plants.stock}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(Payment, {\n          key: plants._id,\n          image: plants.image,\n          plantName: plants.plantName,\n          price: plants.price,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }));\n      }) : \"NO RESULTS\"));\n    }\n  }]);\n\n  return Products;\n}(React.Component);\n\nexport default Products;","map":{"version":3,"sources":["c:\\Users\\smoot\\Desktop\\Plants-Project\\client\\src\\pages\\products.js"],"names":["React","API","PlantCard","Payment","SearchBar","Products","props","loadPlants","getPlants","then","res","setState","plants","data","catch","err","console","log","state","p","event","value","target","queriedObjs","filter","plantName","toLowerCase","search","handleSearch","bind","length","map","_id","image","price","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UAWnBC,UAXmB,GAWN,YAAM;AACjBN,MAAAA,GAAG,CAACO,SAAJ,GACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eACP,MAAKC,QAAL,CAAc;AACZC,UAAAA,MAAM,EAAEF,GAAG,CAACG;AADA,SAAd,CADO;AAAA,OADX,EAMGC,KANH,CAMS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OANZ;AAOD,KAnBkB;;AAEjB,UAAKG,KAAL,GAAa;AACXN,MAAAA,MAAM,EAAE;AADG,KAAb;AAFiB;AAKlB;;;;wCAEmB;AAClB,WAAKL,UAAL,CAAgBY,CAAhB;AACD;;;iCAYYC,K,EAAO;AAClB,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AAEA,UAAME,WAAW,GAAG,KAAKL,KAAL,CAAWN,MAAX,CAAkBY,MAAlB,CAClB,UAAAJ,KAAK;AAAA,eAAIA,KAAK,CAACK,SAAN,CAAgBC,WAAhB,GAA8BC,MAA9B,CAAqCN,KAAK,CAACK,WAAN,EAArC,MAA8D,CAAC,CAAnE;AAAA,OADa,CAApB;AAIA,WAAKf,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEW;AAAV,OAAd;AACD,K,CAED;AACA;AAEA;AACA;AACA;AACA;;;;6BAES;AACP,aAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKK,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKX,KAAL,CAAWN,MAAX,CAAkBkB,MAAlB,KAA6B,CAA7B,GACG,KAAKZ,KAAL,CAAWN,MAAX,CAAkBmB,GAAlB,CAAsB,UAAAnB,MAAM;AAAA,eAC1B,oBAAC,SAAD;AACE,UAAA,GAAG,EAAEA,MAAM,CAACoB,GADd;AAEE,UAAA,KAAK,EAAEpB,MAAM,CAACqB,KAFhB;AAGE,UAAA,SAAS,EAAErB,MAAM,CAACa,SAHpB;AAIE,UAAA,KAAK,EAAEb,MAAM,CAACsB,KAJhB,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOE,oBAAC,OAAD;AACI,UAAA,GAAG,EAAEtB,MAAM,CAACoB,GADhB;AAEI,UAAA,KAAK,EAAEpB,MAAM,CAACqB,KAFlB;AAGI,UAAA,SAAS,EAAErB,MAAM,CAACa,SAHtB;AAII,UAAA,KAAK,EAAEb,MAAM,CAACsB,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CAD0B;AAAA,OAA5B,CADH,GAmBG,YApBN,CAHF,CAFF;AA6BD;;;;EAtEoBlC,KAAK,CAACmC,S;;AA0E7B,eAAe9B,QAAf","sourcesContent":["import React from \"react\";\nimport API from \"../utils/API\";\nimport PlantCard from \"../components/PlantCard\";\nimport Payment from \"../components/Payment\";\nimport SearchBar from \"../components/SearchBar\";\n\nclass Products extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plants: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadPlants(p);\n  }\n\n  loadPlants = () => {\n    API.getPlants()\n      .then(res =>\n        this.setState({\n          plants: res.data\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  handleSearch(event) {\n    const value = event.target.value;\n\n    const queriedObjs = this.state.plants.filter(\n      event => event.plantName.toLowerCase().search(value.toLowerCase()) !== -1\n    );\n\n    this.setState({ plants: queriedObjs });\n  }\n\n  //   handleSearch(e){\n  //     const value = e.target.value;\n\n  //     const queriedObjs = plants.filter(e => e.plantName.toLowerCase().search(value.toLowerCase()) !== -1);\n  //     this.setState({plants: queriedObjs});\n  //     console.log('state plants', this.state.plants)\n  // }\n\n  render() {\n    return (\n      \n      <div>\n        <SearchBar handleSearch={this.handleSearch.bind(this)} />\n\n        <div className=\"content-wrapper\">\n          {this.state.plants.length !== 0\n            ? this.state.plants.map(plants => (\n                <PlantCard\n                  key={plants._id}\n                  image={plants.image}\n                  plantName={plants.plantName}\n                  price={plants.price}\n                  // stock={plants.stock}\n                >\n                  <Payment \n                      key={plants._id}\n                      image={plants.image}\n                      plantName={plants.plantName}\n                      price={plants.price}/>\n                \n                  \n                </PlantCard>\n         \n              ))\n            : \"NO RESULTS\"}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}