{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\src\\\\components\\\\Payment\\\\index.js\";\nimport React from \"react\";\nimport \"./style.css\"; // import API from \"../../utils/API\"\n\nimport \"../../pages/products\";\nimport Cart from \"../Cart\";\nimport { CartHelper } from \"../../utils/action\";\n\nvar Payment =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Payment, _React$Component);\n\n  function Payment(props) {\n    var _this;\n\n    _classCallCheck(this, Payment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Payment).call(this, props));\n\n    _this.handleIncrement = function () {\n      if (_this.state.count > _this.state.stock) {\n        return alert(\"Out of Stock\");\n      }\n\n      _this.setState({\n        count: _this.state.count + 1\n      });\n    };\n\n    _this.handleDecrement = function () {\n      if (_this.state.count <= 1) {\n        _this.setState(function (prevState) {\n          return {\n            counter: prevState.count - 1\n          };\n        });\n      } else {\n        _this.setState({\n          count: _this.state.count - 1\n        });\n      }\n    };\n\n    _this.onInputChange = function (value) {\n      _this.setState({\n        count: value\n      });\n    };\n\n    _this.addToCart = function () {\n      // this.setState(\n      //   { selection: this.state.selection.concat(shop_item) },\n      //   this.saveToLocal\n      // );\n      // The 'SaveToLocal' function is as follows:\n      // saveToLocal() {\n      //        const local = this.state.favourites;\n      //        this.localStorage.setItem(‘saveFavorites’, JSON.stringify(local));\n      //    }\n      // This will push the data into the cart array\n      _this.cartData = _this.cartData.push(_this.state);\n    };\n\n    console.log(\"1\", CartHelper.getCart());\n    _this.state = {\n      count: 1,\n      price: props.price,\n      stock: props.stock,\n      total: 0\n    };\n    return _this;\n  }\n\n  _createClass(Payment, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"payment-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"decrement\",\n        onClick: this.handleDecrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"-\"), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.count,\n        onChange: function onChange(event) {\n          return _this2.onInputChange(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"increment\",\n        onClick: this.handleIncrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"+\")), React.createElement(\"button\", {\n        className: \"add-to-cart\",\n        onClick: this.addToCart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Add To Cart\"));\n    }\n  }]);\n\n  return Payment;\n}(React.Component);\n\nexport default Payment;","map":{"version":3,"sources":["c:\\Users\\smoot\\Desktop\\Plants-Project\\client\\src\\components\\Payment\\index.js"],"names":["React","Cart","CartHelper","Payment","props","handleIncrement","state","count","stock","alert","setState","handleDecrement","prevState","counter","onInputChange","value","addToCart","cartData","push","console","log","getCart","price","total","event","target","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAO,sBAAP;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB,UAYnBC,eAZmB,GAYD,YAAM;AACtB,UAAI,MAAKC,KAAL,CAAWC,KAAX,GAAmB,MAAKD,KAAL,CAAWE,KAAlC,EAAyC;AACvC,eAAOC,KAAK,CAAC,cAAD,CAAZ;AACD;;AACD,YAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACD,KAjBkB;;AAAA,UAmBnBI,eAnBmB,GAmBD,YAAM;AACtB,UAAI,MAAKL,KAAL,CAAWC,KAAX,IAAoB,CAAxB,EAA2B;AACzB,cAAKG,QAAL,CAAc,UAAAE,SAAS;AAAA,iBAAK;AAAEC,YAAAA,OAAO,EAAED,SAAS,CAACL,KAAV,GAAkB;AAA7B,WAAL;AAAA,SAAvB;AACD,OAFD,MAEO;AACL,cAAKG,QAAL,CAAc;AAAEH,UAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,SAAd;AACD;AACF,KAzBkB;;AAAA,UA2BnBO,aA3BmB,GA2BH,UAAAC,KAAK,EAAI;AACvB,YAAKL,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEQ;AAAT,OAAd;AACD,KA7BkB;;AAAA,UA+BnBC,SA/BmB,GA+BP,YAAM;AAGhB;AACA;AACA;AACA;AACF;AAEA;AACA;AACA;AACA;AAGU;AACA,YAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,CAAmB,MAAKZ,KAAxB,CAAhB;AACT,KAhDkB;;AAEjBa,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBlB,UAAU,CAACmB,OAAX,EAAjB;AAEA,UAAKf,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXe,MAAAA,KAAK,EAAElB,KAAK,CAACkB,KAFF;AAGXd,MAAAA,KAAK,EAAEJ,KAAK,CAACI,KAHF;AAIXe,MAAAA,KAAK,EAAE;AAJI,KAAb;AAJiB;AAUlB;;;;6BAwCQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,KAAKZ,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAKE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,KAFpB;AAGE,QAAA,QAAQ,EAAE,kBAAAiB,KAAK;AAAA,iBAAI,MAAI,CAACV,aAAL,CAAmBU,KAAK,CAACC,MAAN,CAAaV,KAAhC,CAAJ;AAAA,SAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAWE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,KAAKV,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,CADF,EAiBE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAE,KAAKW,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAjBF,CADF;AAuBD;;;;EA3EmBhB,KAAK,CAAC0B,S;;AA8E5B,eAAevB,OAAf","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n// import API from \"../../utils/API\"\nimport \"../../pages/products\";\nimport Cart from \"../Cart\";\nimport { CartHelper } from \"../../utils/action\";\n\nclass Payment extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(\"1\", CartHelper.getCart());\n\n    this.state = {\n      count: 1,\n      price: props.price,\n      stock: props.stock,\n      total: 0\n    };\n  }\n\n  handleIncrement = () => {\n    if (this.state.count > this.state.stock) {\n      return alert(\"Out of Stock\");\n    }\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  handleDecrement = () => {\n    if (this.state.count <= 1) {\n      this.setState(prevState => ({ counter: prevState.count - 1 }));\n    } else {\n      this.setState({ count: this.state.count - 1 });\n    }\n  };\n\n  onInputChange = value => {\n    this.setState({ count: value });\n  };\n\n  addToCart = () => {\n\n\n    // this.setState(\n    //   { selection: this.state.selection.concat(shop_item) },\n    //   this.saveToLocal\n    // );\n  // The 'SaveToLocal' function is as follows:\n  \n  // saveToLocal() {\n  //        const local = this.state.favourites;\n  //        this.localStorage.setItem(‘saveFavorites’, JSON.stringify(local));\n  //    }\n\n\n            // This will push the data into the cart array\n            this.cartData = this.cartData.push(this.state);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"payment-container\">\n          <button className=\"decrement\" onClick={this.handleDecrement}>\n            -\n          </button>\n\n          <input\n            type=\"text\"\n            value={this.state.count}\n            onChange={event => this.onInputChange(event.target.value)}\n          />\n\n          <button className=\"increment\" onClick={this.handleIncrement}>\n            +\n          </button>\n        </div>\n\n        <button className=\"add-to-cart\" onClick={this.addToCart}>\n          Add To Cart\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}