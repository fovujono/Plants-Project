{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\smoot\\\\Desktop\\\\Plants-Project\\\\client\\\\src\\\\components\\\\Payment\\\\index.js\";\nimport React from \"react\";\nimport \"./style.css\"; // import API from \"../../utils/API\"\n\nimport \"../../pages/products\";\n\nvar Payment =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Payment, _React$Component);\n\n  function Payment(props) {\n    var _this;\n\n    _classCallCheck(this, Payment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Payment).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.setState({\n        count: 0\n      });\n    };\n\n    _this.handleIncrement = function () {\n      _this.setState({\n        count: _this.state.count + 1\n      });\n    };\n\n    _this.handleDecrement = function () {\n      if (_this.state.count <= 0) {\n        _this.setState(function (prevState) {\n          return {\n            counter: prevState.count - 1\n          };\n        });\n      } else {\n        _this.setState({\n          count: _this.state.count - 1\n        });\n      }\n    };\n\n    _this.onInputChange = function (value) {\n      _this.setState({\n        count: value\n      });\n    };\n\n    _this.addToCart = function (event) {\n      _this.setState({\n        total: _this.state.count * _this.state.price\n      });\n\n      console.log(\"Input Number is \" + _this.state.count + \" \" + \"price\" + \" \" + _this.state.price);\n      console.log(_this.state.total);\n      console.log(\"this is the current count \" + _this.state.count);\n    };\n\n    console.log(\"my price is\" + \" \" + props.price);\n    _this.state = {\n      count: 0,\n      price: props.price,\n      total: \"\" // total: 0\n\n    };\n    return _this;\n  }\n\n  _createClass(Payment, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"payment-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"decrement\",\n        onClick: this.handleDecrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"-\"), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.count,\n        onChange: function onChange(event) {\n          return _this2.onInputChange(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"increment\",\n        onClick: this.handleIncrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"+\")), React.createElement(\"button\", {\n        className: \"add-to-cart\",\n        onClick: function onClick(event) {\n          return _this2.addToCart;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Add To Cart\"));\n    }\n  }]);\n\n  return Payment;\n}(React.Component);\n\nexport default Payment;","map":{"version":3,"sources":["c:\\Users\\smoot\\Desktop\\Plants-Project\\client\\src\\components\\Payment\\index.js"],"names":["React","Payment","props","componentDidMount","setState","count","handleIncrement","state","handleDecrement","prevState","counter","onInputChange","value","addToCart","event","total","price","console","log","target","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n// import API from \"../../utils/API\"\nimport \"../../pages/products\";\n\nclass Payment extends React.Component {\n  \n  constructor(props) {\n    super(props);\n\n    console.log(\"my price is\" + \" \" + props.price)\n  \n\n    this.state = {\n      count: 0,\n      price: props.price,\n      total: \"\"\n      // total: 0\n    };\n  };\n  \n\n  componentDidMount = () =>{\n    \n     this.setState({count: 0})\n  }\n\n  \n  handleIncrement = () => {\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  handleDecrement = () => {\n    if (this.state.count <= 0) {\n      this.setState(prevState => ({ counter: prevState.count - 1 }));\n    } else {\n      this.setState({ count: this.state.count - 1 });\n    }\n  };\n\n  onInputChange = value => {\n    this.setState({ count: value });\n  };\n\n  addToCart = (event) => {\n  this.setState({total: this.state.count * this.state.price}) ;\n  console.log(\"Input Number is \" + this.state.count + \" \" + \"price\" + \" \" + this.state.price)\n  console.log(this.state.total)\n\n  console.log(\"this is the current count \" + this.state.count )\n  \n  }\n\n \n\n  render() {\n    return (\n      <div>\n        <div className=\"payment-container\">\n          <button className=\"decrement\" onClick={this.handleDecrement}>\n            -\n          </button>\n\n          <input\n            type=\"text\"\n            value={this.state.count}\n            onChange={event => this.onInputChange(event.target.value)}\n          />\n\n          <button className=\"increment\" onClick={this.handleIncrement}>\n            +\n          </button>\n        </div>\n\n        <button className=\"add-to-cart\" onClick={event => this.addToCart}>Add To Cart</button>\n      </div>\n    );\n  }\n}\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}